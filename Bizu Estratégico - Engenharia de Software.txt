Capítulo. Bizu Estratégico - Engenharia de Software.

SERPRO (Analista - Especialização:
Tecnologia) Bizu Estratégico - 2023

(Pós-Edital)

Autor:
Elizabeth Menezes de Pinho Alves,
Leonardo Mathias, Paulo Júnior,
Aline Calado Fernandes


Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

Bizu ESTRATÉGICo DE ENGENHARIA DE SoFTwARE -

SERPRO

Olá, prezado aluno. Tudo certo?

Neste material, traremos uma seleção de bizus da disciplina de Engenharia de software para o
concurso de Analista - Especialidade: Tecnologia.

O objetivo é proporcionar uma revisão rápida e de alta qualidade aos alunos por meio de tópicos
que possuem as maiores chances de incidência em prova.

Todos os bizus destinam-se a alunos que já estejam na fase bem final de
revisão (que já
estudaram bastante o conteúdo teórico da disciplina e, nos últimos dias, precisam
revisar por algum
material bem curto e objetivo).

Além disso, utilizamos os materiais do professor Thiago Rodrigues Cavalcanti para
elaborar esse

Bizu.

@elizabethmpalves
@profleoma th ias

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

Apresentação

Antes de começarmos, gostaria de me apresentar. Meu nome é Elizabeth Menezes, tenho 32 anos
e sou natural do Pernambuco. Sou graduada em Administração pela

UFPE e Pós-Graduada em Direito Administrativo e Constitucional.

Atualmente, exerço o cargo de Auditora de Controle Externo no
Tribunal de Contas do Estado de São Paulo (TCE-SP). Também fui
aprovada e nomeada para outros concursos da área fiscal (Auditor Fiscal
Estadual e Municipal) e da área de controle.

Serei a responsável pelo Bizu Estratégico de Engenharia de
software e, com ele, pretendo abordar os tópicos mais cobrados nessa
disciplina, de maneira concisa e objetiva, por meio de uma linguagem
bem clara!

Espero que gostem!

Um grande abraço e bons estudos!

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico -2023 (Pós-Edital)

www. estrategiaconcursos. com. br




Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

ANÁLISE ESTATÍSTICA

Pessoal, segue abaixo uma análise estatística dos assuntos mais exigidos no âmbito da
disciplina de
Engenharia de software:

Com essa análise, podemos verificar quais são os temas mais exigidos e, através disso,
focaremos nos
principais pontos em nossa revisão!

Engenharia de software - SERPRO


Assunto Bizu

Scrum 1

Caderno de Questões

http://questo.es/fwtnid


Engenharia de requisitos

2 http://questo.es/9ags59


Qualidade. Análise estática de código. Teste unitário.

Mock, stubs. Teste de integração. Teste de RNF (carga, 3

estresse). Revisão e programação por pares.

http://questo.es/hnbdvO

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico -2023 (Pós-Edital)

www. estrategiaconcursos. com. br




Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

Engenharia de software

* [Guia Scrum - Versão 2017] Scrum: um framework dentro do qual pessoas
podem tratar e
resolver problemas complexos e adaptativos, enquanto produtiva e criativamente
entregam
produtos com o mais alto valor possível. Scrum é: leve, simples de entender e difícil de dominar.

* [Guia Scrum - Versão 2020] Scrum é um framework leve que ajuda pessoas, times
e organizações
a gerar valor por meio de soluções adaptativas para problemas complexos.

DESCRIÇÃO

Todo trabalho deve ser claramente definido e conhecido por todas as partes
envolvidas no projeto.

Todo trabalho deve ser inspecionado com a frequência necessária para garantir a
qualidade do produto.

O projeto deve ser capaz de se adaptar o projeto às necessidades de negócio.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

CORAGEM

O timo Scn*n prar.lt» toe coragem P«r ■ Iwwr

* CoM certa e trMMlho protAmi»

FOCO

toOo* tocam no babOho da Sprml

* noa objebvo* do Time Scrum

COMPROMETIMENTO

A» peaioM ao comp*onw4vm pc«<aa^nrrrtr

em alcançat o» objeanma cto f kme Scrum

RESPEITO

Oa fwamiWM do * ima 5<TUTF oapMjsm una wi autia*

pera tcnru ptttoai rapaiea e **doo«ndoMta

ABERTURA

O nme Soum a aeua Seafceftoida**

concontem om actaravn aberto» a todo
o trabamo a aoa deuho» com

* eaocuçdo dm trabalho»

VALORES | DESCRIÇÃO

CORAGEM Os integrantes de um projeto precisam ter coragem para fazer a
coisa certa e
trabalharem juntos removendo impedimentos, buscando soluções.


FOCO
COMPROMETIMENTO

RESPEITO
ABERTURA

Os integrantes de um projeto precisam focar no trabalho durante a sprint e nas metas
designadas - time disperso perde produtividade e não alcança os objetivos.

Os integrantes se comprometem com o trabalho que se responsabilizou em fazer,
envolvendo-se e não abandonando pela metade ou entregando sem qualidade.

Os integrantes se respeitam entre si a fim de manter a colaboração, a integração e o
bom ambiente de trabalho.

Os integrantes devem poder ser francos, expor ideias e propostas mesmo que elas não
sejam proveitosas. Momentos de debates, discussões e sugestões são ideais.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

Responsável pela gestão de pessoas e gestão do processo.

Ele deve garantir que o Scrum seja entendido e aplicado. O Scrum Master faz isso
para garantirque a
Equipe Scrum adere à teoria, práticas e regras do Scrum.

O Scrum Master ajuda aqueles que estão fora da Equipe Scrum a entender quais as suas
interações com
a Equipe Scrum são úteis e quais não são.

O Scrum Master ajuda todos a mudarem estas interações para maximizar o valor criado
pela Equipe
Scrum.

Ele é responsável por orientar o Product Owner na criação e ordenação do Product Backlog.

Ele é responsável por garantir que as regras do Scrum estejam sendo cumpridas e seus
valores estejam
sendo seguidos.

Ele é responsável por ajudar a remover impedimentos que o time enfrente, fazendo isso
sem o uso de
qualquer autoridade.

Ele utiliza técnicas de facilitação e coaching para que os membros do time consigam
visualizar os
problemas e encontrem a melhor solução.

Durante eventos, ele é responsável porfazercom que a reunião flua adequadamente,
utilizando técnicas
de facilitação, embora não seja o responsável pela condução.

Ele ajuda a treinar os desenvolvedores em autogerenciamento e interdisciplinaridade.

Ele treina os desenvolvedores em ambientes organizacionais nos quais o Scrum
não é totalmente
adotado e compreendido.

Ele ensina a Equipe Scrum a criar itens do Product Backlog de forma clara e concisa.

Responsável pela micro-qestão e pela criação do produto.

Eles são auto-organizados. Ninguém (nem mesmo o SM) diz aos desenvolvedores como
transformar o
Product Backlog em incrementos de funcionalidades potencialmente utilizáveis.

Times de Desenvolvimento são multifuncionais, possuindo todas as habilidades necessárias,
enquanto
equipe, para criar o incremento do Produto.

O Scrum não reconhece títulos específicos para os desenvolvedores, independentemente do
trabalho
que está sendo realizado pela pessoa;

Individualmente, os desenvolvedores podem ter habilidades especializadas, mas a
responsabilidade
pertence aos desenvolvedores como um todo.

Os desenvolvedores não contêm sub-times dedicados a domínios específicos de conhecimento,
tais
como teste ou análise de negócios.

Os desenvolvedores são estruturados e autorizados pela organização para organizar e
gerenciar seu
próprio trabalho.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

Ele é responsável pela macro-gestão e pela gestão do produto.

Ele é o responsável por maximizar o valor do produto e do trabalho dos
desenvolvedores, sendo o único
que pode gerenciar o Product Backlog.

Ele pode até delegar as atividades de gerenciamento para os desenvolvedores,
mas ainda será
considerado o responsável pelos trabalhos.

Ele é responsável por priorizar/ordenar os itens do Product Backlog e seleciona aqueles
que serão
implementados.

Ele é responsável por garantir o ROI (Retum On Investment ou Retomo sobre Investimento).
Ele é responsável por expressar clara mente os itens do Product Backlog.

Ele é responsável por garantir que o Backlog do Produto seja visível, transparente,
claro para todos, e
mostrar o que a Equipe Scrum vai trabalhar a seguir.

Ele é responsável por qarantir que os desenvolvedores entendam os itens do Product
Backloq no nível
necessário.

Trata-se de uma lista ordenada (por valor, risco, prioridade, entre outros) de
requisitos
ou funcionalidades que o produto deve conter criada pela Equipe Scrum e qerenciada
pelo Product Owner.

Trata-se de conjunto de itens selecionados do Product Backlog, mais a meta da sprint
e mais um plano de ação para entregar um incremento potencialmente usável - é
criado e gerenciado pelos desenvolvedores.

Trata-se da é da soma de todos os itens do Backlog do Produto completados durante
a Sprint e o valor dos incrementos de todas as sprints anteriores - sendo validado como
"pronto".

Conjunto de critérios que indicam que já existem informações suficientes para um
requisito começar a ser desenvolvido.

Conjunto de critérios que indicam que uma determinada históna de usuário atende a
todos os requisitos de aceitação para se tomar um incremento.


SPRINT PLANNING

DAILY SCRUM

SPRINT REVIEW

SPRINT RETROSPECTIVE

Reunião dividida em duas partes que possui duração de até 8 horas. Na primeira parte,
a equipe seleciona, alinha e detalha os itens que vão ser desenvolvidos na próxima
sprint. Na segunda parte, cada item é estimado e decomposto nas tarefas necessárias
para produziras entregas.

Reunião diária para alinhar a comunicação do projeto, inspecionar o progresso para a
meta, identificar impedimentos e adaptaro backlog da sprint, se necessário. Não pode
ter mais que 15 minutos de duração, ocorrendo sempre no mesmo local e horário.

Reunião de até 4F1 de duração realizada ao final de cada sprint para apresentar ao
Product Owner as funcionalidades implementadas para que ele possa validá-las e
eventualmente adaptar futuras modificações. Trata-se de um evento informal para
apresentação do incremento e colaboração sobre os próprios passos.

Reunião de até 3h de duração realizada após a Sprint Review. No entanto, em vez de
validar 0 produto, a equipe busca revisar e validar 0 processo executado para gerar as
funcionalidades. A ideia é planejar maneiras de aumentara qualidade e efetividade do
processo.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

Item. 2. Engenharia de requisitos

Engenharia de requisitos


REQUISITOS DE USUÁRIO

REQUISITOS DE SISTEMA

REQUISITOS NORMAIS

REQUISITOS ESPERADOS

REQUISITOS FASCINANTES

REQUISITOS PERMANENTES

CLASSIFICAÇÃO QUANTO AO NÍVEL DE ABSTRAÇÃO

Descrições, em linguagem natural e com diagramas, de quais serviços o sistema
deve fornecer e as restrições sob as quais deve operar. São requisitos com alto nível
de abstração e poucos detalhes, feitos para serem lidos por pessoas leigas - podem
serfuncionais ou não funcionais.

Descrições detalhadas sobre as funções, operações e restrições de sistema que
definem exatamente o que deve ser implementado. São requisitos com baixo nível
de abstração e muitos detalhes, feitos para serem lidos por pessoas experientes -
podem serfuncionais ou não funcionais.

CLASSIFICAÇÃO QUANTO A QUAUDADE

Refletem os objetivos e metas estabelecidos para um produto ou sistema durante
reuniões com o cliente. Se esses requisitos estiverem presentes, o cliente fica
satisfeito. Exemplos de Requisitos Normais poderiam sertipos de displays gráficos
solicitados, funções de sistema específicas e níveis de desempenho definidos.

Estão implícitos no produto ou sistema e podem sertão fundamentais que o cliente
não os declara explicitamente. Sua ausência será causa de grande insatisfação.
Exemplos de Requisitos Esperados: facilidade na interação homem-máquina,
confiabilidade e correção operacional global e facilidade na instalação do software.

Esses recursos vão além da expectativa dos clientes e demonstram ser muito
satisfatórios quando presentes. Por exemplo, o software para um novo celular vem
com recursos-padrão, mas junto vem um conjunto de capacidades não esperadas.
Exemplos de Requisitos Fascinantes: tecla multitoque e correio de voz visual.

CLASSIFICAÇÃO QUANTO Ã EVOLUÇÃO

Também chamados de Requisitos Estáveis, estão diretamente ligados a atividade
principal da organização. São concebidos com a essência de um sistema e seu
domínio da aplicação, e mudam mais lentamente que requisitos voláteis. Em geral,
eles são derivados do Modelo de Domínio.


REQUISITOS VOLÁTEIS

Também chamados de Requisitos Instáveis, são específicos para a instanciação de
um sistema em um ambiente ou um cliente particular e são mais propensos a
mudança. Se modificam quando o sistema está em desenvolvimento ou em uso.
Podem ser subclassificados em mutáveis, emergentes, consequentes ou de
compatibilidade.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08


REQUISITOS FUNCIONAIS

CLASSIFICAÇÃO QUANTO À FUNCIONALIDADE

São ações ou funcionalidades que o sistema deve fornecer para atingir seus
objetivos. Eles dependem do tipo de software, dos usuários esperados e do ti pode
sistema onde o software será implantado e fazem parte da arquitetura de um
sistema. Grosso modo, pode-se dizer que eles tratam de o que o sistema deve fazer
enquanto os requisitos não-funcionais tratam de como o sistema deve fazer.


REQUISITOS NÃO-FUNCIONAIS

REQUISITOS DE DOMÍNIO

REQUISITOS DE PRODUTO

São restrições ou condições estipuladas sobre as quais o sistema deve funcionar.
Não estão diretamente relacionados às funções específicas do sistema, mas às
gerais - e podem incluir restrições de tempo, restrições de processo
de
desenvolvimento, restrições impostas por padrões, entre outras. Podem ser mais
criticos que os funcionais e sempre devem ser verificáveis. Eles fazem parte da
arquitetura técnica de um sistema.

são requisitos derivados do domínio da aplicação e refletem características de sua
área de negócio. Eles podem ser requisitos funcionais ou não-funcionais e, caso não
sejam satisfeitos, o sistema pode não ser realizável. Por exemplo, um avião que não
atende aos requisitos de confiabilidade, não será certificado para voo.

CLASSIFICAÇÃO QUANTO À ORIGEM

Especificam o comportamento do produto. Entre os exemplos, estão requisitos de
desempenho quanto à rapidez com que o sistema deve operar e quanto de
memória ele requer, requisitos de confiabilidade que definem a taxa aceitável de
falhas, requisitos de portabilidade e requisitos de usabilidade.


REQUISITOS ORGANIZACIONAIS

REQUISITOS EXTERNOS

São derivados de políticas e procedimentos da organização do cliente e do
desenvolvedor. Entre os exemplos, estão padrões de processo que devem ser
usados, linguagem de programação ou o método de projeto usado, e requisitos de
entrega que especificam quando o produto e a sua documentação devem ser
entregues.

Abrange todos os requisitos derivados de fatores externos ao sistema e seu
processo de desenvolvimento. Entre os exemplos, estão a interoperabilidade que
define como o sistema interage com outros sistemas, requisitos legais que devem
ser seguidos, requisitos éticos sistema para assegurar que ele será aceito por todos.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

REQUISITOS NÃO-FUNCIONAIS I EXEMPLOS
I


REQUISITOS DE
CONFIABILIDADE

REQUISITOS DE
PROTEÇÃO

REQUISITOS DE
DESEMPENHO
REQUISITOS DE

ESPAÇO

REQUISITOS DE
USABILIDADE

REQUISITOS DE
SEGURANÇA

REQUISITOS

ÉTICOS
REQUISITOS DE
IMPLEMENTAÇÃO

0 sistema não deve ficar fora do ar por mais de cinco segundos durante o dia.

0 sistema não deve permitirque os usuários modifiquem senhas de acesso que eles
não criaram.

0 sistema deverá ser capaz de processar oitocentas requisições por segundo.

Também chamado de Requisitos de Armazenamento, o sistema deverá ocupar, no
máximo, 8oMb da memória interna do dispositivo.

Os usuários deverão operar todas as funcionalidades do sistema após 2 horas de
treino.

O sistema não deve permitira ativação simultânea de mais de três sinais de alarme.

O sistema não apresentará aos usuários quaisquer dados de natureza confidencial
de outrem.

A interface de usuário deve ser implementada em HTML e não se deve utilizar
Appletsde Java.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

Item. 3. Qualidade. Análise estática de código. Teste
unitário. Mock, stubs. Teste de integração.
Teste de RNF (carga, estresse). Revisão e
programação por pares.

Qualidade. Análise estática de código. Teste unitário. Mock, stubs. Teste de
integração. Teste de RNF (carga, estresse). Revisão e programação por pares.

QUALIDADE DE SOFTWARE

Característica de ter demonstrado a realização da criação de um produto que atende ou
excede os requisitos
acordados, conforme avaliado por medidas e critérios acordados, e que é criado em um processo
acordado.

CATEGORIAS DE FATORES DE QUALIDADE DE SOFTWARE (POR MCCALL. RICHARDS E WALTERS)


Focilidode de manutenção
Flexibilidade
Testabílidade

REVISÃO DO PRODUTO

Portabilidade
Reusabilidade
Interoperabilidade

PRODUTO

Correção Usabilidade
Eficiência
Confiabilidade Integridade

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08

FATORES | DESCRIÇÃO

CORREÇÃO O quanto um programa satisfaz a sua especificação e atende aos objetivos da
missão do
cliente.

CONFIABILIDADE O quanto se pode esperar que um programa realize a função pretendida
com a precisão
exigida.

EFICIÊNCIA A quantidade de recursos computacionais e código exigidos por um
programa para
desempenhar sua função.

INTEGRIDADE O quanto o acesso ao software ou dados por pessoas não autorizadas pode ser
controlado.

USABILIDADE Esforço necessário para aprender, operar, preparara entrada de dados e
interpretar a saída
de um programa.


FACILIDADE DE
MANUTENÇÃO

Esforço necessário para localizar e corrigir um erro em um programa.

FLEXIBILIDADE Esforço necessário para modificar um programa em operação.

TESTABILIDADE Esforço necessário para testar um proqrama de modo a garantir que ele
desempenhe a
função destinada.

PORTABILIDADE Esforço necessário para transferir o programa de um ambiente de hardware
e/ou software
para outro.

REUSABILIDADE O quanto um programa [ou partes de um programa] pode ser
reutilizado em outras
aplicações.

INTEROPERABILIDADE Esforço necessário para integrar um sistema a outro.

FATORES (ISO 9126) DESCRIÇÃO

Trata-se do grau com que o software satisfaz às necessidades declaradas conforme
indicado
pelos seguintes subatributos: adequabilidade, exatidão, interoperabilidade, conformidade e
segurança.

Trata-se da quantidade de tempo que o software fica disponível para uso conforme
indicado
pelos seguintes subatributos: maturidade, tolerância a falhas, facilidade de recuperação.

Trata-se do grau de facilidade de utilização do software conforme indicado pelos
seguintes
subatributos: facilidade de compreensão, facilidade de aprendizagem, operabilidade.

Trata-se do qrau de otimização do uso, pelo software, dos recursos do sistema conforme
indicado pelos seguintes subatributos: comportamento em relação ao
tempo,
comportamento em relação aos recursos.

Trata-se da facilidade com a qual uma correção pode ser realizada no software conforme
indicado pelos seguintes subatributos: facilidade de análise, facilidade de
realização de
mudanças, estabilidade, testabilidade.

Trata-se da facilidade com a qual um software pode ser transposto de um ambiente a
outro
conforme indicado pelos seguintes subatributos: adaptabilidade, facilidade de
instalação,
conformidade, facilidade de substituição.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Jui
Aula 08


GARANTIA DE QUALIDADE

Garantia da qualidade garante que o processo é

definido e apropnado.
Metodologia e padrões de desenvolvimento são
exemplos de garantia da qualidade.

Garantia da qualidade é orientada a processo.
Garantia da qualidade é orientada a prevenção.
Foco em monitoração e melhoria de processo.

As atividades são focadas no início das fases no ciclo de

vida de desenvolvimento de software.
Garantia da qualidade garante que você está fazendo

certo as coisas e da maneira correta.

CONTROLE DE QUALIDADE

As atividades de controle da qualidade focam na
descoberta de defeitos específicos.

Um exemplo de controle da qualidade poderia ser: "Os
requisitos definidos sao os requisitos certos?'

Controle da qualidade é orientado a produto.
Controle da qualidade é orientado a detecção.

Inspeções e garantia de que o produto de trabalho
atenda aos requisitos especificados.

As atividades são focadas no final das fases no ciclo de
vida de desenvolvimento de software.

Controle da qualidade garante que os resultados do seu
trabalho são os esperados conforme requisitos.


DEFEITO

ERRO

FALHA

DEFINIÇÃO DE ACORDO COM AIEEE 610

Também chamado de Falta, trata-se do ato inconsistente cometido por um indivíduo ao
tentar
entender uma determinada informação, resolver um problema ou utilizar um método
ou uma
ferramenta. Em outras palavras, trata-se de um passo, processo ou definição de dados incorretos (Ex:
instrução ou comando incorreto) - pode ocasionar a manifestação de erros em um produto.

Também chamado de Enqano, trata-se da ação humana que produz um resultado incorreto
(Ex:
lógica incorreta escrita pelo programador). Em outras palavras, é a manifestação
concreta de um
defeito em um artefato de software. É a diferença entre o valor obtido e o valor
esperado, isto é,
qualquer estado intermediário incorreto ou resultado inesperado na execução de um programa.

Trata-se do comportamento operacional do software diferente do esperado pelo usuário. Em
outras
palavras, trata-se da produção de uma saída incorreta em relação à especificação. Em geral, defeitos
e erros são causas e falhas são consequências. Elas afetam diretamente o usuário final da aplicação
e pode inviabilizara utilização de um software.

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Elizabeth Menezes de Pinho Alves, Leonardo Mathias, Paulo Ju
Aula 08

Vamos ficando por aqui.

Esperamos que tenha gostado do nosso Bizu!
Bons estudos!

@elizabethmpalves
@profíeomathias

SERPRO (Analista - Especialização: Tecnologia) Bizu Estratégico - 2023 (Pós-Edital)






Mas é sempre bom revisar o porquê e como você pode ser prejudicado com essa prática.


Professor inresteseo tempo
paro elaborar os cursos e o
site os colo ca à venda.

Pirata divulga ilicitamente

(grupos dc ratão), 11 til iz ando-se
do anonimato, nomes falsos ou
laranjas (geral mente o pirata se
anuncia como forma dor de
"grupos solidários" de rateio

que não visam lucro).


Pirata cria a [unos fake
praticando falsidade
ideológica, comprando
cursos do site em nome de
pessoas aleatórias [usando

nome, CPEcndereçoe telefone
de terceiros sem autorização].

Pirata fero os Termos de Uso,
adultero as aulas e retira a
identificação dos arquivos
PDH justam ente porque a
atividade é ilegal e ele não
quer que seus fakcs

sejam identificados).

Pirata compra, muitas vezes,
danando cartões de crédito

(por vezes o sistema antifraud e
não consegue identificar

o golpe a tempo).

Pirata revende as aulas
protegidas por direitos autorais,
praticando concorrência desleal
e em flagrante desrespeito à
Lei de Direitos Autorais

(Lei 9.610/98).


Concursciro(a) d cs informa d o
participa de rateio, achando

que nada disso está acontecendo
c esperando se tornar servidor
público para exigir o
cumprimento das leis.

0 professor que elaborou o
curso não ganha nada, o sito
não recebe nada, e a pessoa
que praticou todos os ilícitos
anteriores (pirata) fica

como lucro.

Deixando de lado esse mar de sujeira, aproveitamos para agradecer a todos
JJI" que adquirem os cursos honestamente e permitem que o site continue existindo.

